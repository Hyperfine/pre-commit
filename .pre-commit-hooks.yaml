# This configuration file allows our pre-commit hooks to be used with pre-commit: http://pre-commit.com/

- id: terraform-fmt
  name: Terraform fmt
  description: Rewrites all Terraform configuration files to a canonical format
  entry: hooks/terraform-fmt.sh
  language: script
  files: \.tf$
  exclude: \.+.terraform\/.*$
  require_serial: true
- id: terraform-validate
  name: Terraform validate
  description: Validates all Terraform configuration files
  entry: hooks/terraform-validate.sh
  language: script
  files: \.tf$
  exclude: \.+.terraform\/.*$
  require_serial: true
- id: packer-validate
  name: Packer validate
  description: Validates all Packer configuration files
  entry: hooks/packer-validate.sh
  language: script
  files: (\.pkr\.(hcl|json)|\.pkrvars\.hcl)$
  require_serial: true
- id: tflint
  name: tflint
  description: Linter for Terraform source code
  entry: hooks/tflint.sh
  language: script
  files: \.tf$
  exclude: \.+.terraform\/.*$
- id: terragrunt-hclfmt
  name: Terragrunt hclfmt
  description: Rewrites all Terragrunt configuration files to a canonical format
  entry: hooks/terragrunt-hclfmt.sh
  language: script
  files: \.hcl$
  exclude: >
    (?x)^(
      .+\.terraform\/.*$|
      .+\.terragrunt-cache\/.*$|
    )$
- id: shellcheck
  name: Shellcheck Bash Linter
  description: Performs linting on bash scripts
  entry: hooks/shellcheck.sh
  language: script
- id: gofmt
  name: gofmt
  description: Gofmt formats Go programs
  entry: hooks/gofmt.sh
  language: script
  files: \.go$
  exclude: vendor\/.*$

- id: goimports
  name: goimports
  description: Goimports updates imports and formats in the same style as gofmt
  entry: hooks/goimports.sh
  language: script
  files: \.go$
  exclude: vendor\/.*$

- id: golint
  name: golint
  description: Golint is a linter for Go source code
  entry: hooks/golint.sh
  language: script
  files: \.go$
  exclude: vendor\/.*$

- id: yapf
  name: yapf
  description: yapf (Yet Another Python Formatter) is a python formatter from Google
  entry: hooks/yapf.sh
  language: script
  files: \.py$
  exclude: >
    (?x)^(
      \.tox\/.*$|
      __pycache__\/.*$
    )$
- id: helmlint
  name: helmlint
  description: Run helm lint, a linter for helm charts
  entry: hooks/helmlint.sh
  language: script
  files: \.((ya?ml)|(tpl))$
  require_serial: true
- id: markdown-link-check
  name: markdown-link-check
  description: Run markdown-link-check to check all the relative and absolute links in markdown docs.
  entry: hooks/mdlink-check.sh
  language: script
  files: \.md$
  exclude: vendor\/.*$
- id: check-terratest-skip-env
  name: check-terratest-skip-env
  description: Check all go source files for any uncommented os.Setenv calls setting a terratest SKIP environment.
  entry: hooks/check_skip_env.py
  language: script
  files: \.go$
- id: conventional-pre-commit
  name: Conventional Commit
  description: Checks commit message for Conventional Commits formatting
  entry: hooks/conventional_pre_commit.py
  language: script
  always_run: true
  stages: [commit-msg]
- id: vulture
  name: vulture
  description: Find unused Python code.
  entry: hooks/vulture/vulture
  language: python
  types: [python]
  pass_filenames: false
  require_serial: true
- id: mypy
  name: mypy
  description: Static type checking for Python.
  entry: hooks/mirrors-mypy
  language: python
  "types_or": [python, pyi]
  args: ["--ignore-missing-imports", "--scripts-are-modules"]
  require_serial: true
  additional_dependencies: []
  minimum_pre_commit_version: "2.9.2"
- id: check-added-large-files
  name: check for added large files
  description: prevents giant files from being committed.
  entry: hooks/pre-commit-hooks/check-added-large-files
  language: python
- id: check-ast
  name: check python ast
  description: simply checks whether the files parse as valid python.
  entry: hooks/pre-commit-hooks/check-ast
  language: python
  types: [python]
- id: check-byte-order-marker
  name: "check BOM - deprecated: use fix-byte-order-marker"
  description: forbids files which have a utf-8 byte-order marker.
  entry: hooks/pre-commit-hooks/check-byte-order-marker
  language: python
  types: [text]
- id: check-builtin-literals
  name: check builtin type constructor use
  description: requires literal syntax when initializing empty or zero python builtin types.
  entry: hooks/pre-commit-hooks/check-builtin-literals
  language: python
  types: [python]
- id: check-case-conflict
  name: check for case conflicts
  description: checks for files that would conflict in case-insensitive filesystems.
  entry: hooks/pre-commit-hooks/check-case-conflict
  language: python
- id: check-docstring-first
  name: check docstring is first
  description: checks a common error of defining a docstring after code.
  entry: hooks/pre-commit-hooks/check-docstring-first
  language: python
  types: [python]
- id: check-executables-have-shebangs
  name: check that executables have shebangs
  description: ensures that (non-binary) executables have a shebang.
  entry: hooks/pre-commit-hooks/check-executables-have-shebangs
  language: python
  types: [text, executable]
  stages: [commit, push, manual]
- id: check-json
  name: check json
  description: checks json files for parseable syntax.
  entry: hooks/pre-commit-hooks/check-json
  language: python
  types: [json]
- id: check-shebang-scripts-are-executable
  name: check that scripts with shebangs are executable
  description: ensures that (non-binary) files with a shebang are executable.
  entry: hooks/pre-commit-hooks/check-shebang-scripts-are-executable
  language: python
  types: [text]
  stages: [commit, push, manual]
- id: pretty-format-json
  name: pretty format json
  description: sets a standard for formatting json files.
  entry: hooks/pre-commit-hooks/pretty-format-json
  language: python
  types: [json]
- id: check-merge-conflict
  name: check for merge conflicts
  description: checks for files that contain merge conflict strings.
  entry: hooks/pre-commit-hooks/check-merge-conflict
  language: python
  types: [text]
- id: check-symlinks
  name: check for broken symlinks
  description: checks for symlinks which do not point to anything.
  entry: hooks/pre-commit-hooks/check-symlinks
  language: python
  types: [symlink]
- id: check-toml
  name: check toml
  description: checks toml files for parseable syntax.
  entry: hooks/pre-commit-hooks/check-toml
  language: python
  types: [toml]
- id: check-vcs-permalinks
  name: check vcs permalinks
  description: ensures that links to vcs websites are permalinks.
  entry: hooks/pre-commit-hooks/check-vcs-permalinks
  language: python
  types: [text]
- id: check-xml
  name: check xml
  description: checks xml files for parseable syntax.
  entry: hooks/pre-commit-hooks/check-xml
  language: python
  types: [xml]
- id: check-yaml
  name: check yaml
  description: checks yaml files for parseable syntax.
  entry: hooks/pre-commit-hooks/check-yaml
  language: python
  types: [yaml]
- id: debug-statements
  name: debug statements (python)
  description: checks for debugger imports and py37+ `breakpoint()` calls in python source.
  entry: hooks/pre-commit-hooks/debug-statement-hook
  language: python
  types: [python]
- id: destroyed-symlinks
  name: detect destroyed symlinks
  description: detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
  entry: hooks/pre-commit-hooks/destroyed-symlinks
  language: python
  types: [file]
- id: detect-aws-credentials
  name: detect aws credentials
  description: detects *your* aws credentials from the aws cli credentials file.
  entry: hooks/pre-commit-hooks/detect-aws-credentials
  language: python
  types: [text]
- id: detect-private-key
  name: detect private key
  description: detects the presence of private keys.
  entry: hooks/pre-commit-hooks/detect-private-key
  language: python
  types: [text]
- id: double-quote-string-fixer
  name: fix double quoted strings
  description: replaces double quoted strings with single quoted strings.
  entry: hooks/pre-commit-hooks/double-quote-string-fixer
  language: python
  types: [python]
- id: end-of-file-fixer
  name: fix end of files
  description: ensures that a file is either empty, or ends with one newline.
  entry: hooks/pre-commit-hooks/end-of-file-fixer
  language: python
  types: [text]
  stages: [commit, push, manual]
- id: file-contents-sorter
  name: file contents sorter
  description: sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.
  entry: hooks/pre-commit-hooks/file-contents-sorter
  language: python
  files: "^$"
- id: fix-byte-order-marker
  name: fix utf-8 byte order marker
  description: removes utf-8 byte order marker.
  entry: hooks/pre-commit-hooks/fix-byte-order-marker
  language: python
  types: [text]
- id: fix-encoding-pragma
  name: fix python encoding pragma
  description: "adds # -*- coding: utf-8 -*- to the top of python files."
  language: python
  entry: hooks/pre-commit-hooks/fix-encoding-pragma
  types: [python]
- id: forbid-new-submodules
  name: forbid new submodules
  description: prevents addition of new git submodules.
  language: python
  entry: hooks/pre-commit-hooks/forbid-new-submodules
  types: [directory]
- id: mixed-line-ending
  name: mixed line ending
  description: replaces or checks mixed line ending.
  entry: hooks/pre-commit-hooks/mixed-line-ending
  language: python
  types: [text]
- id: name-tests-test
  name: tests should end in _test.py
  description: this verifies that test files are named correctly.
  entry: hooks/pre-commit-hooks/name-tests-test
  language: python
  files: (^|/)tests/.+\.py$
- id: no-commit-to-branch
  name: "don't commit to branch"
  entry: hooks/pre-commit-hooks/no-commit-to-branch
  language: python
  pass_filenames: false
  always_run: true
- id: requirements-txt-fixer
  name: fix requirements.txt
  description: sorts entries in requirements.txt.
  entry: hooks/pre-commit-hooks/requirements-txt-fixer
  language: python
  files: requirements.*\.txt$
- id: sort-simple-yaml
  name: sort simple yaml files
  description: sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.
  language: python
  entry: hooks/pre-commit-hooks/sort-simple-yaml
  files: "^$"
- id: trailing-whitespace
  name: trim trailing whitespace
  description: trims trailing whitespace.
  entry: hooks/pre-commit-hooks/trailing-whitespace-fixer
  language: python
  types: [text]
  stages: [commit, push, manual]
